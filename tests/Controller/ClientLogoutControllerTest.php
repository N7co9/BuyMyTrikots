<?php

namespace Controller;

use App\Components\UserSession\Communication\UserLogoutController;
use App\Core\Redirect\ReSpy;
use App\Global\Business\Dependency\Container;
use App\Global\Persistence\SQL\SqlConnector;
use App\Global\Presentation\Redirect\Redirect;
use App\Global\Presentation\Redirect\RedirectSpy;
use App\Global\Presentation\Session\SessionHandler;
use PHPUnit\Framework\TestCase;

class ClientLogoutControllerTest extends TestCase
{
    public RedirectSpy $redirectSpy;
    private UserLogoutController $clientLogoutController;
    private SessionHandler $sessionHandler;

    protected function setUp(): void
    {
        $this->sessionHandler = new SessionHandler();
        $this->redirectSpy = new RedirectSpy();

        $container = new Container();
        $container->set(Redirect::class, $this->redirectSpy);
        $container->set(SessionHandler::class, new SessionHandler());

        $this->clientLogoutController = new UserLogoutController($container);

        parent::setUp();
    }

    public function testDataConstruct(): void
    {
        $this->sessionHandler->setSession('mail@mail.com');
        $id = session_id();
        $this->clientLogoutController->dataConstruct();
        $newId = session_id();

        self::assertNotSame($newId, $id);
        self::assertSame('?page=shop', $this->clientLogoutController->redirect->location);
    }
    public function tearDown(): void
    {
        $connector = new SqlConnector();
        $connector->closeConnection();
        parent::tearDown();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}

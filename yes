Escaped mutants:
================

1) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/BasketController.php:33    [M] LogicalAnd

--- Original
+++ New
@@ @@
     {
         $action = $_GET['action'] ?? '';
         $actionMap = ['add' => 'addItemToBasket', 'remove' => 'removeItemFromBasket'];
-        if (!empty($_SESSION['mail']) && array_key_exists($action, $actionMap)) {
+        if (!empty($_SESSION['mail']) || array_key_exists($action, $actionMap)) {
             $this->manipulator->{$actionMap[$action]}();
         }
         $basketContent = $this->basketRepository->getBasketInfo();


2) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/CheckoutController.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function dataConstruct() : TemplateEngine
     {
         $errorDTOList = $this->billingValidator->validate($this->orderRepository->getOrderInformation());
-        $this->billingValidator->redirectIfValid($errorDTOList);
+        
         $basket = $this->basketRepository->getBasketInfo();
         $total = $this->basketRepository->getBasketTotal();
         $values = $this->orderRepository->getOrderInformation();


3) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/CheckoutController.php:37    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $total = $this->basketRepository->getBasketTotal();
         $values = $this->orderRepository->getOrderInformation();
         $this->templateEngine->setTemplate('checkout.twig');
-        $this->templateEngine->addParameter('errors', $errorDTOList);
+        
         $this->templateEngine->addParameter('values', $values);
         $this->templateEngine->addParameter('basket', $basket);
         $this->templateEngine->addParameter('total', $total);


4) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/CheckoutController.php:38    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $values = $this->orderRepository->getOrderInformation();
         $this->templateEngine->setTemplate('checkout.twig');
         $this->templateEngine->addParameter('errors', $errorDTOList);
-        $this->templateEngine->addParameter('values', $values);
+        
         $this->templateEngine->addParameter('basket', $basket);
         $this->templateEngine->addParameter('total', $total);
         return $this->templateEngine;
     }
 }


5) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/CheckoutController.php:39    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->templateEngine->setTemplate('checkout.twig');
         $this->templateEngine->addParameter('errors', $errorDTOList);
         $this->templateEngine->addParameter('values', $values);
-        $this->templateEngine->addParameter('basket', $basket);
+        
         $this->templateEngine->addParameter('total', $total);
         return $this->templateEngine;
     }
 }


6) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/CheckoutController.php:40    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $this->templateEngine->addParameter('errors', $errorDTOList);
         $this->templateEngine->addParameter('values', $values);
         $this->templateEngine->addParameter('basket', $basket);
-        $this->templateEngine->addParameter('total', $total);
+        
         return $this->templateEngine;
     }
 }


7) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/ClientLogoutController.php:21    [M] FunctionCallRemoval

--- Original
+++ New
@@ @@
     public function dataConstruct() : void
     {
         session_destroy();
-        session_start();
+        
         $this->redirect->to('?page=shop');
     }
 }


8) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/ClientRegistrationController.php:46    [M] Coalesce

--- Original
+++ New
@@ @@
             if (empty($this->errorDTOList)) {
                 $validPassword = password_hash(password: $clientDTO->password, algo: PASSWORD_DEFAULT);
                 $newUser = new ClientDTO();
-                $newUser->username = $clientDTO->username ?? '';
+                $newUser->username = '' ?? $clientDTO->username;
                 $newUser->email = $clientDTO->email ?? '';
                 $newUser->password = $validPassword;
                 if (empty($this->clientRepository->findByMail($clientDTO->email) && !empty($clientDTO->password))) {


9) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/ClientRegistrationController.php:47    [M] Coalesce

--- Original
+++ New
@@ @@
                 $validPassword = password_hash(password: $clientDTO->password, algo: PASSWORD_DEFAULT);
                 $newUser = new ClientDTO();
                 $newUser->username = $clientDTO->username ?? '';
-                $newUser->email = $clientDTO->email ?? '';
+                $newUser->email = '' ?? $clientDTO->email;
                 $newUser->password = $validPassword;
                 if (empty($this->clientRepository->findByMail($clientDTO->email) && !empty($clientDTO->password))) {
                     $this->clientEntityManager->saveCredentials($newUser);


10) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/ClientRegistrationController.php:51    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $newUser->email = $clientDTO->email ?? '';
                 $newUser->password = $validPassword;
                 if (empty($this->clientRepository->findByMail($clientDTO->email) && !empty($clientDTO->password))) {
-                    $this->clientEntityManager->saveCredentials($newUser);
+                    
                     $this->errorDTOList[] = new ErrorDTO('Success. Welcome abroad!');
                     $clientDTO->username = '';
                     $clientDTO->password = '';


11) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/ClientRegistrationController.php:62    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
         }
         $this->templateEngine->setTemplate('registration.twig');
-        $this->templateEngine->addParameter('user', $clientDTO);
+        
         $this->templateEngine->addParameter('vName', $clientDTO->username);
         $this->templateEngine->addParameter('vMail', $clientDTO->email);
         $this->templateEngine->addParameter('errors', $this->errorDTOList);


12) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/HomepageController.php:24    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function dataConstruct() : TemplateEngine
     {
-        $this->searchEngine->search();
+        
         $teamID = $_GET['id'] ?? null;
         $user = $_SESSION['mail'] ?? '';
         $players = $this->playerRepository->getPlayers($teamID);


13) /home/nicogruenewald/Documents/BuyMyTrikots/src/Controller/ThankYouController.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $order = $this->orderRepository->getOrderInformation();
         $this->orderEntityManager->saveOrder($order);
         $orderID = $this->orderRepository->getOrderId();
-        $this->clientEntityManager->emptyBasket();
+        
         $this->templateEngine->addParameter('orderID', $orderID);
         $this->templateEngine->addParameter('basket', $basket);
         $this->templateEngine->addParameter('order', $order);


14) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiCache.php:45    [M] LessThanOrEqualTo

--- Original
+++ New
@@ @@
             return false;
         }
         $fileTime = filemtime($cacheFilePath);
-        return time() - $fileTime <= $this->cacheDuration;
+        return time() - $fileTime < $this->cacheDuration;
     }
     private function loadFromCache(string $cacheFilePath) : array
     {


15) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/DependencyProvider.php:23    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
 {
     public function provide(Container $container) : void
     {
-        $container->set(TemplateEngine::class, new TemplateEngine(__DIR__ . '/../../src/View/templates'));
+        $container->set(TemplateEngine::class, new TemplateEngine(__DIR__));
         $container->set(PlayerRepository::class, new PlayerRepository());
         $container->set(ClientRepository::class, new ClientRepository());
         $container->set(ClientEntityManager::class, new ClientEntityManager(new ClientMapper()));


16) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/DependencyProvider.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $container->set(PlayerRepository::class, new PlayerRepository());
         $container->set(ClientRepository::class, new ClientRepository());
         $container->set(ClientEntityManager::class, new ClientEntityManager(new ClientMapper()));
-        $container->set(ClientMapper::class, new ClientMapper());
+        
         $container->set(ClientValidator::class, new ClientValidator());
         $container->set(SearchEngine::class, new SearchEngine(new Redirect(new RedirectSpy())));
         $container->set(ClientDTO::class, new ClientDTO());


17) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/DependencyProvider.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $container->set(OrderRepository::class, new OrderRepository());
         $container->set(OrderEntityManager::class, new OrderEntityManager());
         $container->set(BillingValidator::class, new BillingValidator(new Redirect(new RedirectSpy())));
-        $container->set(RedirectSpy::class, new RedirectSpy());
+        
         $container->set(Redirect::class, new Redirect(new RedirectSpy()));
     }
 }


18) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Mapper/ApiMapper.php:32    [M] ArrayOneItem

--- Original
+++ New
@@ @@
             $DTO->clubWebsite = $array['website'];
             $list[] = $DTO;
         }
-        return $list;
+        return count($list) > 1 ? array_slice($list, 0, 1, true) : $list;
     }
     public function MapBasket($array, $quantity) : BasketDTO
     {


19) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Redirect/Redirect.php:18    [M] Concat

--- Original
+++ New
@@ @@
     public function to(string $location) : void
     {
         $this->redirectSpy->sendHeader($this->url . $location);
-        header('Location: ' . $this->url . $location);
+        header($this->url . 'Location: ' . $location);
     }
 }


20) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Redirect/Redirect.php:18    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     public function to(string $location) : void
     {
         $this->redirectSpy->sendHeader($this->url . $location);
-        header('Location: ' . $this->url . $location);
+        header($this->url . $location);
     }
 }


21) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Redirect/Redirect.php:18    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     public function to(string $location) : void
     {
         $this->redirectSpy->sendHeader($this->url . $location);
-        header('Location: ' . $this->url . $location);
+        header('Location: ' . $location);
     }
 }


22) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Redirect/Redirect.php:18    [M] Concat

--- Original
+++ New
@@ @@
     public function to(string $location) : void
     {
         $this->redirectSpy->sendHeader($this->url . $location);
-        header('Location: ' . $this->url . $location);
+        header('Location: ' . $location . $this->url);
     }
 }


23) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Redirect/Redirect.php:18    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     public function to(string $location) : void
     {
         $this->redirectSpy->sendHeader($this->url . $location);
-        header('Location: ' . $this->url . $location);
+        header('Location: ' . $this->url);
     }
 }


24) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Redirect/Redirect.php:18    [M] FunctionCallRemoval

--- Original
+++ New
@@ @@
     public function to(string $location) : void
     {
         $this->redirectSpy->sendHeader($this->url . $location);
-        header('Location: ' . $this->url . $location);
+        
     }
 }


25) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/SQL/SqlConnector.php:20    [M] Coalesce

--- Original
+++ New
@@ @@
     private function connect() : void
     {
         if ($this->pdo === null) {
-            $dbName = $_ENV['DATABASE'] ?? 'users';
+            $dbName = 'users' ?? $_ENV['DATABASE'];
             $dbHost = "localhost:3337";
             $dbUser = "root";
             $dbPass = "nexus123";


26) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/SQL/SqlConnector.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $dbUser = "root";
             $dbPass = "nexus123";
             $this->pdo = new PDO("mysql:host={$dbHost};dbname={$dbName}", $dbUser, $dbPass);
-            $this->pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
+            
         }
     }
     public function executeSelectQuery(string $query, array $params) : array


27) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/TotalCalculator.php:17    [M] OneZeroFloat

--- Original
+++ New
@@ @@
     }
     public function calculateTotal() : float
     {
-        $total = 0.0;
+        $total = 1.0;
         if (!empty($_SESSION['delivery'])) {
             if ($_SESSION['delivery'] === 'DHL') {
                 $total = $this->basketRepository->getBasketTotal() + 4.95;


28) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:27    [M] ArrayOneItem

--- Original
+++ New
@@ @@
             $this->validateLastName($billingInformation->lastName, $errorDTOList);
             $this->validateFirstName($billingInformation->firstName, $errorDTOList);
         }
-        return $errorDTOList;
+        return count($errorDTOList) > 1 ? array_slice($errorDTOList, 0, 1, true) : $errorDTOList;
     }
     public function redirectIfValid($array) : void
     {


29) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:39    [M] UnwrapTrim

--- Original
+++ New
@@ @@
     }
     private function validateFirstName($firstName, &$errorDTOList) : void
     {
-        $firstName = trim($firstName);
+        $firstName = $firstName;
         if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your first name doesn\'t look right!');
         }


30) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:40    [M] GreaterThanOrEqualTo

--- Original
+++ New
@@ @@
     private function validateFirstName($firstName, &$errorDTOList) : void
     {
         $firstName = trim($firstName);
-        if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
+        if (strlen($firstName) > 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your first name doesn\'t look right!');
         }
     }


31) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:40    [M] LessThanOrEqualTo

--- Original
+++ New
@@ @@
     private function validateFirstName($firstName, &$errorDTOList) : void
     {
         $firstName = trim($firstName);
-        if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
+        if (strlen($firstName) >= 30 || strlen($firstName) < 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your first name doesn\'t look right!');
         }
     }


32) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:40    [M] LogicalOr

--- Original
+++ New
@@ @@
     private function validateFirstName($firstName, &$errorDTOList) : void
     {
         $firstName = trim($firstName);
-        if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
+        if (strlen($firstName) >= 30 && strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your first name doesn\'t look right!');
         }
     }


33) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:40    [M] LogicalOr

--- Original
+++ New
@@ @@
     private function validateFirstName($firstName, &$errorDTOList) : void
     {
         $firstName = trim($firstName);
-        if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
+        if ((strlen($firstName) >= 30 || strlen($firstName) <= 2) && !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your first name doesn\'t look right!');
         }
     }


34) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:41    [M] PregMatchRemoveCaret

--- Original
+++ New
@@ @@
     private function validateFirstName($firstName, &$errorDTOList) : void
     {
         $firstName = trim($firstName);
-        if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
+        if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/[a-zA-Z\\s-]+$/', $firstName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your first name doesn\'t look right!');
         }
     }


35) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:41    [M] PregMatchRemoveDollar

--- Original
+++ New
@@ @@
     private function validateFirstName($firstName, &$errorDTOList) : void
     {
         $firstName = trim($firstName);
-        if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $firstName)) {
+        if (strlen($firstName) >= 30 || strlen($firstName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+/', $firstName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your first name doesn\'t look right!');
         }
     }


36) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:48    [M] UnwrapTrim

--- Original
+++ New
@@ @@
     }
     private function validateLastName($lastName, &$errorDTOList) : void
     {
-        $lastName = trim($lastName);
+        $lastName = $lastName;
         if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your last name doesn\'t look right!');
         }


37) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:49    [M] GreaterThanOrEqualTo

--- Original
+++ New
@@ @@
     private function validateLastName($lastName, &$errorDTOList) : void
     {
         $lastName = trim($lastName);
-        if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
+        if (strlen($lastName) > 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your last name doesn\'t look right!');
         }
     }


38) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:49    [M] LessThanOrEqualTo

--- Original
+++ New
@@ @@
     private function validateLastName($lastName, &$errorDTOList) : void
     {
         $lastName = trim($lastName);
-        if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
+        if (strlen($lastName) >= 30 || strlen($lastName) < 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your last name doesn\'t look right!');
         }
     }


39) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:49    [M] LogicalOr

--- Original
+++ New
@@ @@
     private function validateLastName($lastName, &$errorDTOList) : void
     {
         $lastName = trim($lastName);
-        if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
+        if (strlen($lastName) >= 30 && strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your last name doesn\'t look right!');
         }
     }


40) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:49    [M] LogicalOr

--- Original
+++ New
@@ @@
     private function validateLastName($lastName, &$errorDTOList) : void
     {
         $lastName = trim($lastName);
-        if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
+        if ((strlen($lastName) >= 30 || strlen($lastName) <= 2) && !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your last name doesn\'t look right!');
         }
     }


41) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:50    [M] PregMatchRemoveCaret

--- Original
+++ New
@@ @@
     private function validateLastName($lastName, &$errorDTOList) : void
     {
         $lastName = trim($lastName);
-        if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
+        if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/[a-zA-Z\\s-]+$/', $lastName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your last name doesn\'t look right!');
         }
     }


42) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:50    [M] PregMatchRemoveDollar

--- Original
+++ New
@@ @@
     private function validateLastName($lastName, &$errorDTOList) : void
     {
         $lastName = trim($lastName);
-        if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $lastName)) {
+        if (strlen($lastName) >= 30 || strlen($lastName) <= 2 || !preg_match('/^[a-zA-Z\\s-]+/', $lastName)) {
             $errorDTOList[] = new ErrorDTO('Oops, your last name doesn\'t look right!');
         }
     }


43) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:57    [M] UnwrapTrim

--- Original
+++ New
@@ @@
     }
     private function validateCity($city, &$errorDTOList) : void
     {
-        $city = trim($city);
+        $city = $city;
         if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
             $errorDTOList[] = new ErrorDTO('Oops, your City doesn\'t look right!');
         }


44) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:58    [M] GreaterThanOrEqualTo

--- Original
+++ New
@@ @@
     private function validateCity($city, &$errorDTOList) : void
     {
         $city = trim($city);
-        if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
+        if (strlen($city) > 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
             $errorDTOList[] = new ErrorDTO('Oops, your City doesn\'t look right!');
         }
     }


45) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:58    [M] LessThanOrEqualTo

--- Original
+++ New
@@ @@
     private function validateCity($city, &$errorDTOList) : void
     {
         $city = trim($city);
-        if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
+        if (strlen($city) >= 20 || strlen($city) < 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
             $errorDTOList[] = new ErrorDTO('Oops, your City doesn\'t look right!');
         }
     }


46) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:58    [M] LogicalOr

--- Original
+++ New
@@ @@
     private function validateCity($city, &$errorDTOList) : void
     {
         $city = trim($city);
-        if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
+        if (strlen($city) >= 20 && strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
             $errorDTOList[] = new ErrorDTO('Oops, your City doesn\'t look right!');
         }
     }


47) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:58    [M] LogicalOr

--- Original
+++ New
@@ @@
     private function validateCity($city, &$errorDTOList) : void
     {
         $city = trim($city);
-        if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
+        if ((strlen($city) >= 20 || strlen($city) <= 2) && !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
             $errorDTOList[] = new ErrorDTO('Oops, your City doesn\'t look right!');
         }
     }


48) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:59    [M] PregMatchRemoveCaret

--- Original
+++ New
@@ @@
     private function validateCity($city, &$errorDTOList) : void
     {
         $city = trim($city);
-        if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
+        if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/[a-zA-Z\\s-]+$/', $city)) {
             $errorDTOList[] = new ErrorDTO('Oops, your City doesn\'t look right!');
         }
     }


49) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:59    [M] PregMatchRemoveDollar

--- Original
+++ New
@@ @@
     private function validateCity($city, &$errorDTOList) : void
     {
         $city = trim($city);
-        if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $city)) {
+        if (strlen($city) >= 20 || strlen($city) <= 2 || !preg_match('/^[a-zA-Z\\s-]+/', $city)) {
             $errorDTOList[] = new ErrorDTO('Oops, your City doesn\'t look right!');
         }
     }


50) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:66    [M] UnwrapTrim

--- Original
+++ New
@@ @@
     }
     private function validateZip($zip, &$errorDTOList) : void
     {
-        $zip = trim($zip);
+        $zip = $zip;
         if (!preg_match('/^\\d{4,6}$/', $zip)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Zip-Code doesn\'t look right!');
         }


51) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:67    [M] PregMatchRemoveCaret

--- Original
+++ New
@@ @@
     private function validateZip($zip, &$errorDTOList) : void
     {
         $zip = trim($zip);
-        if (!preg_match('/^\\d{4,6}$/', $zip)) {
+        if (!preg_match('/\\d{4,6}$/', $zip)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Zip-Code doesn\'t look right!');
         }
     }


52) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:67    [M] PregMatchRemoveDollar

--- Original
+++ New
@@ @@
     private function validateZip($zip, &$errorDTOList) : void
     {
         $zip = trim($zip);
-        if (!preg_match('/^\\d{4,6}$/', $zip)) {
+        if (!preg_match('/^\\d{4,6}/', $zip)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Zip-Code doesn\'t look right!');
         }
     }


53) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:74    [M] UnwrapTrim

--- Original
+++ New
@@ @@
     }
     private function validateAddress($address, &$errorDTOList) : void
     {
-        $address = trim($address);
+        $address = $address;
         if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Address doesn\'t look right!');
         }
     }
 }


54) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:75    [M] GreaterThanOrEqualTo

--- Original
+++ New
@@ @@
     private function validateAddress($address, &$errorDTOList) : void
     {
         $address = trim($address);
-        if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
+        if (strlen($address) > 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Address doesn\'t look right!');
         }
     }
 }


55) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:75    [M] LessThanOrEqualTo

--- Original
+++ New
@@ @@
     private function validateAddress($address, &$errorDTOList) : void
     {
         $address = trim($address);
-        if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
+        if (strlen($address) >= 20 || strlen($address) < 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Address doesn\'t look right!');
         }
     }
 }


56) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:75    [M] LogicalOr

--- Original
+++ New
@@ @@
     private function validateAddress($address, &$errorDTOList) : void
     {
         $address = trim($address);
-        if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
+        if (strlen($address) >= 20 && strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Address doesn\'t look right!');
         }
     }
 }


57) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:75    [M] LogicalOr

--- Original
+++ New
@@ @@
     private function validateAddress($address, &$errorDTOList) : void
     {
         $address = trim($address);
-        if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
+        if ((strlen($address) >= 20 || strlen($address) <= 2) && !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Address doesn\'t look right!');
         }
     }
 }


58) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:76    [M] PregMatchRemoveCaret

--- Original
+++ New
@@ @@
     private function validateAddress($address, &$errorDTOList) : void
     {
         $address = trim($address);
-        if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
+        if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/[a-zA-Z\\s-]+$/', $address)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Address doesn\'t look right!');
         }
     }
 }


59) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/BillingValidator.php:76    [M] PregMatchRemoveDollar

--- Original
+++ New
@@ @@
     private function validateAddress($address, &$errorDTOList) : void
     {
         $address = trim($address);
-        if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+$/', $address)) {
+        if (strlen($address) >= 20 || strlen($address) <= 2 || !preg_match('/^[a-zA-Z\\s-]+/', $address)) {
             $errorDTOList[] = new ErrorDTO('Oops, your Address doesn\'t look right!');
         }
     }
 }


60) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/ClientValidator.php:36    [M] LogicalOr

--- Original
+++ New
@@ @@
     }
     private function validatePassword($clientDTO, &$errorDTOList) : void
     {
-        if (empty($clientDTO->password) || !preg_match('@[A-Z]@', $clientDTO->password) || !preg_match('@[a-z]@', $clientDTO->password) || !preg_match('@\\d@', $clientDTO->password) || !preg_match('@\\W@', $clientDTO->password) || strlen($clientDTO->password) <= 6) {
+        if (empty($clientDTO->password) && !preg_match('@[A-Z]@', $clientDTO->password) || !preg_match('@[a-z]@', $clientDTO->password) || !preg_match('@\\d@', $clientDTO->password) || !preg_match('@\\W@', $clientDTO->password) || strlen($clientDTO->password) <= 6) {
             $errorDTOList[] = new ErrorDTO('Oops, your password doesn\'t look right!');
         }
     }
 }


61) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/ClientValidator.php:36    [M] LogicalOr

--- Original
+++ New
@@ @@
     }
     private function validatePassword($clientDTO, &$errorDTOList) : void
     {
-        if (empty($clientDTO->password) || !preg_match('@[A-Z]@', $clientDTO->password) || !preg_match('@[a-z]@', $clientDTO->password) || !preg_match('@\\d@', $clientDTO->password) || !preg_match('@\\W@', $clientDTO->password) || strlen($clientDTO->password) <= 6) {
+        if ((empty($clientDTO->password) || !preg_match('@[A-Z]@', $clientDTO->password)) && !preg_match('@[a-z]@', $clientDTO->password) || !preg_match('@\\d@', $clientDTO->password) || !preg_match('@\\W@', $clientDTO->password) || strlen($clientDTO->password) <= 6) {
             $errorDTOList[] = new ErrorDTO('Oops, your password doesn\'t look right!');
         }
     }
 }


62) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/ClientValidator.php:36    [M] LogicalOr

--- Original
+++ New
@@ @@
     }
     private function validatePassword($clientDTO, &$errorDTOList) : void
     {
-        if (empty($clientDTO->password) || !preg_match('@[A-Z]@', $clientDTO->password) || !preg_match('@[a-z]@', $clientDTO->password) || !preg_match('@\\d@', $clientDTO->password) || !preg_match('@\\W@', $clientDTO->password) || strlen($clientDTO->password) <= 6) {
+        if ((empty($clientDTO->password) || !preg_match('@[A-Z]@', $clientDTO->password) || !preg_match('@[a-z]@', $clientDTO->password)) && !preg_match('@\\d@', $clientDTO->password) || !preg_match('@\\W@', $clientDTO->password) || strlen($clientDTO->password) <= 6) {
             $errorDTOList[] = new ErrorDTO('Oops, your password doesn\'t look right!');
         }
     }
 }


63) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/Validation/ClientValidator.php:41    [M] LessThanOrEqualTo

--- Original
+++ New
@@ @@
     }
     private function validatePassword($clientDTO, &$errorDTOList) : void
     {
-        if (empty($clientDTO->password) || !preg_match('@[A-Z]@', $clientDTO->password) || !preg_match('@[a-z]@', $clientDTO->password) || !preg_match('@\\d@', $clientDTO->password) || !preg_match('@\\W@', $clientDTO->password) || strlen($clientDTO->password) <= 6) {
+        if (empty($clientDTO->password) || !preg_match('@[A-Z]@', $clientDTO->password) || !preg_match('@[a-z]@', $clientDTO->password) || !preg_match('@\\d@', $clientDTO->password) || !preg_match('@\\W@', $clientDTO->password) || strlen($clientDTO->password) < 6) {
             $errorDTOList[] = new ErrorDTO('Oops, your password doesn\'t look right!');
         }
     }
 }


64) /home/nicogruenewald/Documents/BuyMyTrikots/src/Model/BasketRepository.php:36    [M] ArrayOneItem

--- Original
+++ New
@@ @@
             $itemInfoArray = $this->apiCache->getData('item', $item['item_id']);
             $itemInfoDTOArray[] = $this->apiMapper->MapBasket($itemInfoArray, $this->getItemQuantity($item['item_id']));
         }
-        return $itemInfoDTOArray;
+        return count($itemInfoDTOArray) > 1 ? array_slice($itemInfoDTOArray, 0, 1, true) : $itemInfoDTOArray;
     }
     public function getItemQuantity($itemID) : array
     {


65) /home/nicogruenewald/Documents/BuyMyTrikots/src/Model/BasketRepository.php:53    [M] Assignment

--- Original
+++ New
@@ @@
             if ($item->quantity >= 2) {
                 $item->price *= $item->quantity;
             }
-            $price += $item->price;
+            $price = $item->price;
         }
         return $price ?? null;
     }
 }


Timed Out mutants:
==================

Skipped mutants:
================

Not Covered mutants:
====================

1) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiCache.php:28    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
                 $data = $this->apiHandler->requestPlayers($id);
                 break;
             case 'item':
-                $data = $this->apiHandler->requestItemInfo(['item_id' => $id]);
+                $data = $this->apiHandler->requestItemInfo([]);
                 break;
             default:
                 throw new \Exception("Invalid request type: {$type}");


2) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiCache.php:32    [M] Throw_

--- Original
+++ New
@@ @@
                 $data = $this->apiHandler->requestItemInfo(['item_id' => $id]);
                 break;
             default:
-                throw new \Exception("Invalid request type: {$type}");
+                new \Exception("Invalid request type: {$type}");
         }
         $this->saveToCache($data, $cacheFilePath);
         return $data;


3) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiCache.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             default:
                 throw new \Exception("Invalid request type: {$type}");
         }
-        $this->saveToCache($data, $cacheFilePath);
+        
         return $data;
     }
     private function isCacheValid(string $cacheFilePath) : bool


4) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiCache.php:41    [M] FalseValue

--- Original
+++ New
@@ @@
     private function isCacheValid(string $cacheFilePath) : bool
     {
         if (!file_exists($cacheFilePath)) {
-            return false;
+            return true;
         }
         $fileTime = filemtime($cacheFilePath);
         return time() - $fileTime <= $this->cacheDuration;


5) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiCache.php:53    [M] FunctionCallRemoval

--- Original
+++ New
@@ @@
     }
     private function saveToCache(array $data, string $cacheFilePath) : void
     {
-        file_put_contents($cacheFilePath, json_encode($data));
+        
     }
     private function getCacheFilePath(string $type, $id) : string
     {


6) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:12    [M] Concat

--- Original
+++ New
@@ @@
         $reqPrefs['http']['method'] = 'GET';
         $reqPrefs['http']['header'] = 'X-Auth-Token: a6c8d6df34f64da0a3d3bbe5beed6ea7';
         $stream_context = stream_context_create($reqPrefs);
-        $response = file_get_contents('http://api.football-data.org/v4/' . $url, false, $stream_context);
+        $response = file_get_contents($url . 'http://api.football-data.org/v4/', false, $stream_context);
         return json_decode($response, true, 512, JSON_THROW_ON_ERROR);
     }
     public function requestPlayers($teamID) : array


7) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:12    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $reqPrefs['http']['method'] = 'GET';
         $reqPrefs['http']['header'] = 'X-Auth-Token: a6c8d6df34f64da0a3d3bbe5beed6ea7';
         $stream_context = stream_context_create($reqPrefs);
-        $response = file_get_contents('http://api.football-data.org/v4/' . $url, false, $stream_context);
+        $response = file_get_contents($url, false, $stream_context);
         return json_decode($response, true, 512, JSON_THROW_ON_ERROR);
     }
     public function requestPlayers($teamID) : array


8) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:12    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $reqPrefs['http']['method'] = 'GET';
         $reqPrefs['http']['header'] = 'X-Auth-Token: a6c8d6df34f64da0a3d3bbe5beed6ea7';
         $stream_context = stream_context_create($reqPrefs);
-        $response = file_get_contents('http://api.football-data.org/v4/' . $url, false, $stream_context);
+        $response = file_get_contents('http://api.football-data.org/v4/', false, $stream_context);
         return json_decode($response, true, 512, JSON_THROW_ON_ERROR);
     }
     public function requestPlayers($teamID) : array


9) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:12    [M] FalseValue

--- Original
+++ New
@@ @@
         $reqPrefs['http']['method'] = 'GET';
         $reqPrefs['http']['header'] = 'X-Auth-Token: a6c8d6df34f64da0a3d3bbe5beed6ea7';
         $stream_context = stream_context_create($reqPrefs);
-        $response = file_get_contents('http://api.football-data.org/v4/' . $url, false, $stream_context);
+        $response = file_get_contents('http://api.football-data.org/v4/' . $url, true, $stream_context);
         return json_decode($response, true, 512, JSON_THROW_ON_ERROR);
     }
     public function requestPlayers($teamID) : array


10) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:13    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $reqPrefs['http']['header'] = 'X-Auth-Token: a6c8d6df34f64da0a3d3bbe5beed6ea7';
         $stream_context = stream_context_create($reqPrefs);
         $response = file_get_contents('http://api.football-data.org/v4/' . $url, false, $stream_context);
-        return json_decode($response, true, 512, JSON_THROW_ON_ERROR);
+        return json_decode($response, true, 511, JSON_THROW_ON_ERROR);
     }
     public function requestPlayers($teamID) : array
     {


11) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:13    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $reqPrefs['http']['header'] = 'X-Auth-Token: a6c8d6df34f64da0a3d3bbe5beed6ea7';
         $stream_context = stream_context_create($reqPrefs);
         $response = file_get_contents('http://api.football-data.org/v4/' . $url, false, $stream_context);
-        return json_decode($response, true, 512, JSON_THROW_ON_ERROR);
+        return json_decode($response, true, 513, JSON_THROW_ON_ERROR);
     }
     public function requestPlayers($teamID) : array
     {


12) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:16    [M] PublicVisibility

--- Original
+++ New
@@ @@
         $response = file_get_contents('http://api.football-data.org/v4/' . $url, false, $stream_context);
         return json_decode($response, true, 512, JSON_THROW_ON_ERROR);
     }
-    public function requestPlayers($teamID) : array
+    protected function requestPlayers($teamID) : array
     {
         return $this->makeApiRequest('teams/' . $teamID);
     }


13) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:18    [M] Concat

--- Original
+++ New
@@ @@
     }
     public function requestPlayers($teamID) : array
     {
-        return $this->makeApiRequest('teams/' . $teamID);
+        return $this->makeApiRequest($teamID . 'teams/');
     }
     public function requestItemInfo($itemID) : array
     {


14) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:18    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     }
     public function requestPlayers($teamID) : array
     {
-        return $this->makeApiRequest('teams/' . $teamID);
+        return $this->makeApiRequest($teamID);
     }
     public function requestItemInfo($itemID) : array
     {


15) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:18    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     }
     public function requestPlayers($teamID) : array
     {
-        return $this->makeApiRequest('teams/' . $teamID);
+        return $this->makeApiRequest('teams/');
     }
     public function requestItemInfo($itemID) : array
     {


16) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:21    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->makeApiRequest('teams/' . $teamID);
     }
-    public function requestItemInfo($itemID) : array
+    protected function requestItemInfo($itemID) : array
     {
         return $this->makeApiRequest('persons/' . $itemID['item_id']);
     }
 }


17) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:23    [M] Concat

--- Original
+++ New
@@ @@
     }
     public function requestItemInfo($itemID) : array
     {
-        return $this->makeApiRequest('persons/' . $itemID['item_id']);
+        return $this->makeApiRequest($itemID['item_id'] . 'persons/');
     }
 }


18) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:23    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     }
     public function requestItemInfo($itemID) : array
     {
-        return $this->makeApiRequest('persons/' . $itemID['item_id']);
+        return $this->makeApiRequest($itemID['item_id']);
     }
 }


19) /home/nicogruenewald/Documents/BuyMyTrikots/src/Core/API/ApiHandling.php:23    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
     }
     public function requestItemInfo($itemID) : array
     {
-        return $this->makeApiRequest('persons/' . $itemID['item_id']);
+        return $this->makeApiRequest('persons/');
     }
 }
